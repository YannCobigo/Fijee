# Source localization subtraction model

#
# Functions space
#
cell          = tetrahedron
scalarElement = FiniteElement("Lagrange", cell, 1)
tensorElement = TensorElement("Lagrange", cell, 1)


#
# Function definition
#

# Trial and test functions
Phi_s   = TrialFunction(scalarElement)
v       = TestFunction(scalarElement)
n       = scalarElement.cell().n

a_inf   = Coefficient(tensorElement)
a_sigma = Coefficient(tensorElement)
Phi_0   = Coefficient(scalarElement)

#
# Weak variational form
#

# Bilinear form
a  = inner( a_sigma * grad(Phi_s), grad(v) ) * dx


# Linear form
L  = inner( ( a_inf - a_sigma ) * grad(Phi_0), grad(v) ) * dx
L -=  v * inner(n, a_inf * grad(Phi_0)) * ds(0)

